// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user")
  accounts      Account[]
  sessions      Session[]
}
enum Role{
  user
  admin
}
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Quote {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String?  @db.Text
  items     Json
  total     Float
  subTotal  Float
  estimatedTax Float
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  excerpt   String
  date      DateTime
  author    String
  status    PostStatus   @default(DRAFT)
  content   String   @db.Text
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}


model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id          String    @id @default(cuid())
  name        String @unique
  description String?
  price       Float
  image       String?
  categoryId  String
  inStock     Boolean
  unit        String    
  category    Category  @relation(fields: [categoryId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  quote     String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Client {
  id        String   @id @default(cuid())
  name      String
  logo      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
